executor_environment: 
  interface: PostgresSqlInterpreter
  config:
    host: 127.0.0.1
    port: 5432
    dbname: core
    user: postgres
    password: root
    additional_authorized_imports: "*"
plan:
  - step: |-
      Here is the task:
      ```
      {{ task }}
      ```

      Here is the database description:
      ```
      {{ database.description }}
      ```
      
      Here are the tables in the database:
      ````
      {%- for table in database.tables %}
        - Table: {{ table.name }}
          Columns:
            {%- for column in table.columns %}
            - {{ column.name }}: {{ column.description }}
            {%- endfor %}
      {%- endfor %}
      ````
      {%- if mcp_servers and mcp_servers.values()|length > 0 %}
      These functions are used to complete a step efficiently.
      {%- for server in mcp_servers.values() %}
        - {{ server.name }}: {{ server.description }}
            Takes inputs: {{server.inputs}}
            Returns an output of type: {{server.output_type}}
      {%- endfor %}
      {%- endif %}

      You have to solve the task by writing a SQL Select Statement for a result table created using existing tables in the database.

      You can use existence of required views that allows you compute the result table in a single select statement.

      The views are created using existing tables in the database. You can use the views to compute the result table.      

      {%- if hint and hint|length > 0 %}
      
      {{ hint }}
      {% endif %}

    out_id: result_table
    action: final_answer
  - step: get_view_list
    out: one_to_many
    out_id: view_table
    action: environment
    return_type: list
  - step: |-
      Here is the task:
      ```
      {{task}}
      ```

      Here is the database description:
      ```
      {{ database.description }}
      ```

      Here are the tables in the database:
      ````
      {%- for table in database.tables %}
        - Table: {{ table.name }}
          Columns:
            {%- for column in table.columns %}
            - {{ column.name }}: {{ column.description }}
            {%- endfor %}
      {%- endfor %}
      ````

      {%- if mcp_servers and mcp_servers.values()|length > 0 %}
      These functions are used to complete a step efficiently.
      {%- for server in mcp_servers.values() %}
        - {{ server.name }}: {{ server.description }}
            Takes inputs: {{server.inputs}}
            Returns an output of type: {{server.output_type}}
      {%- endfor %}
      {%- endif %}

      You came up with the following result table:
      ```
      {{ result_table }}
      ```

      Create a description for the {{ view_table }} view which has clear instructions on how to compute the view using existing table.

      {%- if hint and hint|length > 0 %}
      
      {{ hint }}
      {% endif %}

    out_id: view_table_description
    action: skip
  - step: |-
      Here is the task:
      ```
      {{task}}
      ```

      Here is the database description:
      ```
      {{ database.description }}
      ```

      Here are the tables in the database:
      ````
      {%- for table in database.tables %}
        - Table: {{ table.name }}
          Columns:
            {%- for column in table.columns %}
            - {{ column.name }}: {{ column.description }}
            {%- endfor %}
      {%- endfor %}
      ````

      {%- if mcp_servers and mcp_servers.values()|length > 0 %}
      These functions are used to complete a step efficiently.
      {%- for server in mcp_servers.values() %}
        - {{ server.name }}: {{ server.description }}
            Takes inputs: {{server.inputs}}
            Returns an output of type: {{server.output_type}}
      {%- endfor %}
      {%- endif %}

      You came up with the following result table:

      ```
      {{ result_table }}
      ```
      
      Here is the description of the {{ view_table }} view:
      ```
      {{ view_table_description }}
      ```
      Write the SQL statement to create the {{ view_table }} view.

      {%- if hint and hint|length > 0 %}
      
      {{ hint }}
      {% endif %}
