executor_environment: 
  interface: B2YamlInterpreter
  config:
    bucket_name: yaml_bucket
    endpoint_url: http://localhost:9000
    access_key_id: minioadmin
    secret_access_key: minioadmin
    prefix: jennifer
plan:
  - step: |-
      Here is the task:
      ```
      {{ task }}
      ```

      You have to complete the task by writing a text response in jinja template format.
      
      You can use jinja variables to capture text that is a variable value or it is not known at the time of writing the jinja template.
      
      You must make sure the template has a text structure relevant to the task.

      Write the jinja template to complete the task.
    out_id: result_file
    action: final_answer
  - step: |-  
      Here is a jinja template:
      ```
      {{jinja_template}}
      ```

      Please list the variables that are used in the jinja template.
    out: one_to_many
    out_id: variable_list
    action: skip
    return_type: list
  - step: |-
      Here is the task:
      ```
      {{task}}
      ```

      You came up with the following result file:
      ```
      {{ result_file }}
      ```

      {%- if mcp_servers and mcp_servers.values()|length > 0 %}
      These functions are can be used to compute a variable value.
      {%- for server in mcp_servers.values() %}
        - {{ server.name }}: {{ server.description }}
            Takes inputs: {{server.inputs}}
            Returns an output of type: {{server.output_type}}
      {%- endfor %}
      {%- endif %}

      Here text files in the datalake which can also be used to compute a variable value:
      ````
      {%- for file in files %}
        - {{ file.name }}: {{ file.description }}
      {%- endfor %}
      ````
      
      Please write a detailed description of the {{ variable_name }} variable with clear instructions on how to leverage functions and files in the datalake to compute the value of the variable.
    out_id: variable_description
    action: skip
  - step: |-
      Here is the variable description:
      ```
      {{ variable_description }}
      ```

      Here are the text files in the datalake:
      ````
      {%- for file in files %}
        - File: : {{ file.name }}
          Description: {{ file.description }}
      {%- endfor %}
      ````

      {%- if mcp_servers and mcp_servers.values()|length > 0 %}
      These functions are used to complete a step efficiently.
      {%- for server in mcp_servers.values() %}
        - {{ server.name }}: {{ server.description }}
            Takes inputs: {{server.inputs}}
            Returns an output of type: {{server.output_type}}
      {%- endfor %}
      {%- endif %}

      You have to write a jinja template file making use of function calls and file names stated as yaml variables to compute the value of the {{ variable_name }} variable.
    out_id: variable_yaml
